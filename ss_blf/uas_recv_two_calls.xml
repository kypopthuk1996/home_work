<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">
<scenario name = "uas_smart_cw_test">
<Global variables="call_1_received,call_2_received,state_call_1,state_call_2"/>

<init>
    <nop>
        <action>
            <!-- init global vars -->
            <assignstr assign_to="state_call_1" value="init"/>
            <assignstr assign_to="state_call_2" value="init"/>
        </action>
    </nop>
</init>


<!-- if first call is received then goto handle_call_2 label -->
<nop test="call_1_received" next="handle_call_2"/>

<recv request="INVITE">
<action>
    <ereg regexp="<sip:([^;@]+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,local_number"/>
    <ereg regexp="<sip:([^;@]+)" search_in="hdr" header="From:" check_it="true" assign_to="dummy,remote_number"/>
    <ereg regexp="<sip:([^;@]+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,local_number"/>
    <ereg regexp=";tag=(\w+)" search_in="hdr" header="From:" check_it="true" assign_to="dummy,remote_tag" />
    <ereg regexp="<sip:.*@([^;>]+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,local_domain" />
    <ereg regexp="<sip:.*@([^;>]+)" search_in="hdr" header="From:" check_it="true" assign_to="dummy,remote_domain" />
    <!--Set local tag-->
    <assignstr assign_to="local_tag" value="[call_number][pid]"/>
    <!-- Set flag for first call -->
    <assignstr assign_to="call_1_received" value="true"/>
    <ereg regexp="sip:([^@]@)?[^>]+" search_in="hdr" header="Contact:" check_it="true" assign_to="contact"/>
</action>
</recv>

<send>
<![CDATA[
    SIP/2.0 100 Trying
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID:]
    [last_CSeq:]
    Content-Length: 0
]]>
</send>

<send>
<![CDATA[
    SIP/2.0 180 Ringing
    [last_Via:]
    [last_From:]
    [last_To:];tag=[$local_tag]
    [last_Call-ID:]
    [last_CSeq:]
    Contact: <sip:[$local_number]@[local_ip]:[local_port]>
    Content-Length: 0
]]>
</send>

<pause milliseconds="1100"/>

<send retrans="500">
<![CDATA[
    SIP/2.0 200 OK
    [last_Via:]
    [last_From:]
    [last_To:];tag=[$local_tag]
    [last_Call-ID:]
    [last_CSeq:]
    Contact: <sip:[$local_number]@[local_ip]:[local_port];user=phone>
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=sipp 123456 654321 IN IP[local_ip_type] [local_ip]
    s=A conversation
    c=IN IP[local_ip_type] [local_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 8 96
    a=rtpmap:8 PCMA/8000
    a=rtpmap:96 telephone-event/8000
    a=fmtp:96 0-16
]]>
</send>

<recv request="ACK"></recv>

<!-- Play music -->
<nop>
  <action>
     <exec rtp_stream="[media_path]/test.alaw,-1,8" />
 </action>
</nop>

<!---Waiting for a second call -->
<label id="wait_call_2_recv_cnt"/>

<nop hide="true" next="wait_call_2" test="call_2_received" test_inverse="true"/>

<pause milliseconds="3000"/>

<!-- Set first call on hold -->
<send retrans="500">
<![CDATA[
    INVITE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: [$local_number] <sip:[$local_number]@[$local_domain]>;tag=[$local_tag]
    To: [$remote_number] <sip:[$remote_number]@[$remote_domain]>;tag=[$remote_tag]
    [last_call-id:]
    CSeq: [cseq] INVITE
    Contact: <sip:[$local_number]@[local_ip]:[local_port];transport=udp>
    Max-Forwards: 70
    Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=sendonly_test 123456 654322 IN IP[local_ip_type] [local_ip]
    s=sendonly_test
    t=0 0
    c=IN IP[local_ip_type] [local_ip]
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000
    a=sendonly
]]>
</send>
<recv response="100" optional="true"/>

<!-- Changing state of first call to hold -->
<recv response="200" auth="true">
    <action>
        <assignstr assign_to="state_call_1" value="hold"/>
        <ereg regexp="sip:([^@]@)?[^>]+" search_in="hdr" header="Contact:" check_it="true" assign_to="contact"/>
    </action>
</recv>

<send>
<![CDATA[
    ACK [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    [last_from:]
    [last_to:]
    [last_call-id:]
    CSeq: [$last_cseq] ACK
    Content-Length: 0
]]>
</send>

<!-- Waiting until second call change state to hold -->
<label id="wait_call_2_hold_state_cnt"/>
<nop hide="true" next="wait_call_2_hold_state" test="state_call_2" test_var_value="hold" test_inverse="true"/>

<!-- Changing state of first call to unhold -->
<send retrans="500">
<![CDATA[
    INVITE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: [$local_number] <sip:[$local_number]@[$local_domain]>;tag=[$local_tag]
    To: [$remote_number] <sip:[$remote_number]@[$remote_domain]>;tag=[$remote_tag]
    [last_call-id:]
    CSeq: [cseq] INVITE
    Contact: <sip:[$local_number]@[local_ip]:[local_port];transport=udp>
    Max-Forwards: 70
    Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=sendonly_test 123456 654322 IN IP[local_ip_type] [local_ip]
    s=sendonly_test
    t=0 0
    c=IN IP[local_ip_type] [local_ip]
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000
    a=sendrecv
]]>
</send>
<recv response="100" optional="true"/>

<recv response="200" auth="true">
    <action>
        <assignstr assign_to="state_call_1" value="unhold"/>
        <ereg regexp="sip:([^@]@)?[^>]+" search_in="hdr" header="Contact:" check_it="true" assign_to="contact"/>
    </action>
</recv>

<send>
<![CDATA[
    ACK [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    [last_from:]
    [last_to:]
    [last_call-id:]
    CSeq: [$last_cseq] ACK
    Content-Length: 0
]]>
</send>

<send>
<![CDATA[
    BYE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: <sip:[$local_number]@[$local_domain]>;tag=[$local_tag]
    To: <sip:[$remote_number]@[$remote_domain]>;tag=[$remote_tag]
    [last_call-id]
    CSeq: [cseq] BYE
    Contact: <sip:[$local_number]@[local_ip]:[local_port]>
    Max-Forwards: 70
    Content-Length: 0
]]>
</send>

<!-- Changing state of first call to terminated -->
<recv response="200" next="end">
        <action>
            <assignstr assign_to="state_call_1" value="terminated"/>
        </action>
</recv>

<label id="handle_call_2"/>

<recv request="INVITE">
<action>
    <ereg regexp="<sip:([^;@]+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,local_number"/>
    <ereg regexp="<sip:([^;@]+)" search_in="hdr" header="From:" check_it="true" assign_to="dummy,remote_number"/>
    <ereg regexp="<sip:([^;@]+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,local_number"/>
    <ereg regexp=";tag=(\w+)" search_in="hdr" header="From:" check_it="true" assign_to="dummy,remote_tag" />
    <ereg regexp="<sip:.*@([^;>]+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,local_domain" />
    <ereg regexp="<sip:.*@([^;>]+)" search_in="hdr" header="From:" check_it="true" assign_to="dummy,remote_domain" />
    <assignstr assign_to="local_tag" value="[call_number][pid]"/>
    <!-- Set flag for second call -->
    <assignstr assign_to="call_2_received" value="true"/>
    <ereg regexp="sip:([^@]@)?[^>]+" search_in="hdr" header="Contact:" check_it="true" assign_to="contact"/>
</action>
</recv>

<send>
<![CDATA[
    SIP/2.0 100 Trying
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID:]
    [last_CSeq:]
    Content-Length: 0
]]>
</send>

<send>
<![CDATA[
    SIP/2.0 180 Ringing
    [last_Via:]
    [last_From:]
    [last_To:];tag=[$local_tag]
    [last_Call-ID:]
    [last_CSeq:]
    Contact: <sip:[$local_number]@[local_ip]:[local_port]>
    Content-Length: 0
]]>
</send>

<!-- Waiting until first call change state to hold -->
<label id="wait_call_1_hold_state_cnt"/>
<nop hide="true" next="wait_call_1_hold_state" test="state_call_1" test_var_value="hold" test_inverse="true"/>

<send retrans="500">
<![CDATA[
    SIP/2.0 200 OK
    [last_Via:]
    [last_From:]
    [last_To:];tag=[$local_tag]
    [last_Call-ID:]
    [last_CSeq:]
    Contact: <sip:[$local_number]@[local_ip]:[local_port];user=phone>
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=sipp 123456 654321 IN IP[local_ip_type] [local_ip]
    s=A conversation
    c=IN IP[local_ip_type] [local_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 8 96
    a=rtpmap:8 PCMA/8000
    a=rtpmap:96 telephone-event/8000
    a=fmtp:96 0-16
]]>
</send>

<recv request="ACK"></recv>

<!-- Play music -->
<nop>
  <action>
     <exec rtp_stream="[media_path]/test.alaw,-1,8" />
 </action>
</nop>

<pause milliseconds="3000" />

<!-- Set second call on hold -->
<send retrans="500">
<![CDATA[
    INVITE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: [$local_number] <sip:[$local_number]@[$local_domain]>;tag=[$local_tag]
    To: [$remote_number] <sip:[$remote_number]@[$remote_domain]>;tag=[$remote_tag]
    [last_call-id:]
    CSeq: [cseq] INVITE
    Contact: <sip:[$local_number]@[local_ip]:[local_port];transport=udp>
    Max-Forwards: 70
    Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=sendonly_test 123456 654322 IN IP[local_ip_type] [local_ip]
    s=sendonly_test
    t=0 0
    c=IN IP[local_ip_type] [local_ip]
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000
    a=sendonly
]]>
</send>
<recv response="100" optional="true"/>

<!-- Changing state of second call to hold -->
<recv response="200" auth="true">
    <action>
        <assignstr assign_to="state_call_2" value="hold"/>
    </action>
</recv>

<send>
<![CDATA[
    ACK [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    [last_from:]
    [last_to:]
    [last_call-id:]
    CSeq: [$last_cseq] ACK
    Content-Length: 0
]]>
</send>

<!-- Waiting until first call change state to terminated -->
<label id="wait_call_1_term_state_cnt"/>
<nop hide="true" next="wait_call_1_term_state" test="state_call_1" test_var_value="terminated" test_inverse="true"/>

<!-- Set second call on unhold -->
<send retrans="500">
<![CDATA[
    INVITE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: [$local_number] <sip:[$local_number]@[$local_domain]>;tag=[$local_tag]
    To: [$remote_number] <sip:[$remote_number]@[$remote_domain]>;tag=[$remote_tag]
    [last_call-id:]
    CSeq: [cseq] INVITE
    Contact: <sip:[$local_number]@[local_ip]:[local_port];transport=udp>
    Max-Forwards: 70
    Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=sendonly_test 123456 654322 IN IP[local_ip_type] [local_ip]
    s=sendonly_test
    t=0 0
    c=IN IP[local_ip_type] [local_ip]
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000
    a=sendrecv
]]>
</send>
<recv response="100" optional="true"></recv>

<!-- Changing state of second call to unhold -->
<recv response="200" auth="true">
    <action>
        <assignstr assign_to="state_call_2" value="unhold"/>
        <ereg regexp="sip:([^@]@)?[^>]+" search_in="hdr" header="Contact:" check_it="true" assign_to="contact"/>
    </action>
</recv>

<send>
<![CDATA[
    ACK [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    [last_from:]
    [last_to:]
    [last_call-id:]
    CSeq: [$last_cseq] ACK
    Content-Length: 0
]]>
</send>

<pause milliseconds="3000"/>

<send>
<![CDATA[
    BYE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: <sip:[$local_number]@[$local_domain]>;tag=[$local_tag]
    To: <sip:[$remote_number]@[$remote_domain]>;tag=[$remote_tag]
    [last_call-id]
    CSeq: [cseq] BYE
    Contact: <sip:[$local_number]@[local_ip]:[local_port]>
    Max-Forwards: 70
    Content-Length: 0
]]>
</send>

<!-- Changing state of second call to terminated -->
<recv response="200" next="end">
        <action>
            <assignstr assign_to="state_call_2" value="terminated"/>
        </action>
</recv>



<label id="wait_call_2"/>
<pause milliseconds="200"/>
<nop hide="true" next="wait_call_2_recv_cnt"/>


<label id="wait_call_1_hold_state"/>
<pause milliseconds="200"/>
<nop hide="true" next="wait_call_1_hold_state_cnt"/>

<label id="wait_call_2_hold_state"/>
<pause milliseconds="200"/>
<nop hide="true" next="wait_call_2_hold_state_cnt"/>


<label id="wait_call_1_term_state"/>
<pause milliseconds="200"/>
<nop hide="true" next="wait_call_1_term_state_cnt"/>

<!--exit label-->
<label id="end"/>
</scenario>
