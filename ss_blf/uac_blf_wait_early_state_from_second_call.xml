<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">
<scenario name = "Simple BLF UAC">

<Global variables="CDPNDOM,CGPNDOM,CDPN,CHK_DIRECTION,EXPIRES" />
<User variables="cdpn_dom,cgpn_dom,cdpn,blf_state,blf_direction,dummy,exp" />
<Reference variables="dummy" />

<!-- Setting expires value -->

<nop hide="true" condexec="EXPIRES">
    <action>
        <assignstr assign_to="exp" value="[$EXPIRES]"/>
    </action>
</nop>

<nop hide="true" condexec="EXPIRES" condexec_inverse="true">
    <action>
        <assignstr assign_to="exp" value="3600"/>
    </action>
</nop>

<!-- Setting common params -->

<nop hide="true">
    <action>
        <assignstr assign_to="local_tag" value="[call_number][pid]"/>
        <assignstr assign_to="cgpn_dom" value="[$CGPNDOM]"/>
        <assignstr assign_to="cdpn_dom" value="[$CDPNDOM]"/>
        <assignstr assign_to="cdpn" value="[$CDPN]"/>
        <assignstr assign_to="exp" value="3600"/>
    </action>
</nop>

<!-- Start subscription -->

<send>
<![CDATA[
    SUBSCRIBE sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "BLF тест" <sip:[service]@[$cgpn_dom]>;tag=[$local_tag]
    To: <sip:[$cdpn]@[$cdpn_dom]>
    Call-ID: [call_id]
    CSeq: [cseq] SUBSCRIBE
    Contact: <sip:[service]@[local_ip]:[local_port]>
    Event: dialog
    Accept: application/dialog-info+xml
    Expires: [$exp]
    Content-Length: 0
]]>
</send>

<recv response="401" auth="true" optional="true" next="send_auth_to_subscribe"/>

<label id="recv_200_to_subscribe"/>

<recv response="200">
    <action>
        <ereg regexp=";tag=(\w+)" search_in="hdr" header="To:" check_it="true" assign_to="dummy,subscribe_remote_tag" />
    </action>
</recv>

<!-- Pause for skip NOTIFY with dummy body -->

<pause milliseconds="1000"/>

<!-- Recv blf notification -->

<label id="wait_notify_for_first_call"/>

<recv request="NOTIFY">
    <action>
        <assign assign_to="blf_state" value="" />
        <assign assign_to="blf_direction" value="" />
        <ereg regexp="<state>([a-z]+)</state>" search_in="msg" check_it="true" assign_to="dummy,blf_state"/>
        <ereg regexp="direction=\"([^\"]+)\"" search_in="msg" check_it="true" assign_to="dummy,blf_direction"/>
        <ereg regexp="call-id\s?=\s?\"([^\"]+)\"" search_in="msg" assign_to="dummy,dialog_call_id"/>
    </action>
</recv>

<send next="handle_notify_for_first_call">
<![CDATA[
    SIP/2.0 200 OK
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID:]
    [last_CSeq:]
    Content-Length: 0
]]>
</send>

<label id="wait_notify_for_second_call"/>

<recv request="NOTIFY">
    <action>
        <assign assign_to="blf_state" value="" />
        <assign assign_to="blf_direction" value="" />
        <ereg regexp="<state>([a-z]+)</state>" search_in="msg" check_it="true" assign_to="dummy,blf_state"/>
        <ereg regexp="direction=\"([^\"]+)\"" search_in="msg" check_it="true" assign_to="dummy,blf_direction"/>
        <ereg regexp="call-id\s?=\s?\"([^\"]+)\"" search_in="msg" assign_to="dummy,dialog_call_id"/>
    </action>
</recv>

<send next="handle_notify_for_second_call">
<![CDATA[
    SIP/2.0 200 OK
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID:]
    [last_CSeq:]
    Content-Length: 0
]]>
</send>

<label id="unsub"/>

<send>
<![CDATA[
    SUBSCRIBE sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "BLF тест" <sip:[service]@[$cgpn_dom]>;tag=[$local_tag]
    To: <sip:[$cdpn]@[$cdpn_dom]>;tag=[$subscribe_remote_tag]
    [last_call-id:]
    CSeq: [cseq] SUBSCRIBE
    Contact: <sip:[service]@[local_ip]:[local_port]>
    Event: dialog
    Accept: application/dialog-info+xml
    Expires: 0
    Content-Length: 0
]]>
</send>

<recv response="401" auth="true" optional="true" next="send_auth_to_unsubscribe"/>

<label id="recv_200_to_unsubscribe"/>

<recv response="200" next="exit"/>

<label id="send_auth_to_subscribe"/>

<send next="recv_200_to_subscribe">
<![CDATA[
    SUBSCRIBE sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "BLF тест" <sip:[service]@[$cgpn_dom]>;tag=[$local_tag]
    To: <sip:[$cdpn]@[$cdpn_dom]>
    Call-ID: [call_id]
    [authentication]
    CSeq: [cseq] SUBSCRIBE
    Contact: <sip:[service]@[local_ip]:[local_port]>
    Event: dialog
    Accept: application/dialog-info+xml
    Expires: [$exp]
    Content-Length: 0
]]>
</send>

<label id="send_auth_to_unsubscribe"/>

<send next="recv_200_to_unsubscribe">
<![CDATA[
    SUBSCRIBE sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "BLF тест" <sip:[service]@[$cgpn_dom]>;tag=[$local_tag]
    To: <sip:[$cdpn]@[$cdpn_dom]>;tag=[$subscribe_remote_tag]
    Call-ID: [call_id]
    [authentication]
    CSeq: [cseq] SUBSCRIBE
    Contact: <sip:[service]@[local_ip]:[local_port]>
    Event: dialog
    Accept: application/dialog-info+xml
    Expires: 0
    Content-Length: 0
]]>
</send>

<label id="handle_notify_for_second_call"/>

<!-- Exit if fail flag is setted -->
<nop next="unsub" test="sub_fail" test_var_value="true"/>

<nop hide="true" condexec="CHK_DIRECTION">
    <action>
        <strcmp assign_to="compare_result_sc" variable="blf_direction" variable2="CHK_DIRECTION"/>
    </action>
</nop>

<nop hide="true" condexec="compare_result_sc">
    <action>
        <warning message="Wrong direction in blf body. Current direction [$blf_direction]. Require direction [$CHK_DIRECTION]. State [$blf_state]"/>
        <assignstr assign_to="sub_fail" value="true"/>
    </action>
</nop>

<!-- Setting next state to early -->

<nop hide="true" condexec="next_state_sc" condexec_inverse="true">
    <action>
        <assignstr assign_to="next_state_sc" value="early"/>
    </action>
</nop>

<!-- Comparing current state and next state -->

<nop hide="true" condexec="next_state_sc">
    <action>
        <strcmp assign_to="state_compare_sc" variable="blf_state" variable2="next_state_sc"/>
    </action>
</nop>

<nop hide="true" condexec="state_compare_sc">
    <action>
        <warning message="Recv message with unexpected state: [$blf_state]. Expected state: [$next_state_sc]"/>
        <assignstr assign_to="sub_fail" value="true"/>
    </action>
</nop>


<!-- Handling notification with state early -->

<nop hide="true" test="blf_state" test_var_value="early" next="send_command_for_sc" condexec="blf_state" condexec_var_value="early">
    <action>
        <warning message="Second call changed state to: [$blf_state]" />
        <assignstr assign_to="next_state_sc" value="confirmed"/>
    </action>
</nop>

<!-- Handling notification with state confirmed -->

<nop hide="true" test="blf_state" test_var_value="confirmed" next="wait_notify_for_second_call" condexec="blf_state" condexec_var_value="confirmed">
    <action>
        <warning message="Second call changed state to: [$blf_state]" />
        <assignstr assign_to="next_state_sc" value="terminated"/>
    </action>
</nop>

<!-- Handling notification with state terminated -->

<nop hide="true" test="blf_state" test_var_value="terminated" next="unsub">
    <action>
        <warning message="Second call changed state to: [$blf_state]" />
    </action>
</nop>

<!-- Setting failed flag -->

<nop hide="true" next="unsub">
    <action>
        <assignstr assign_to="sub_fail" value="true"/>
    </action>
</nop>


<label id="handle_notify_for_first_call"/>

<!-- Exit if fail flag is setted -->
<nop next="unsub" test="sub_fail" test_var_value="true"/>

<!-- Checking notification direction if needed -->

<nop hide="true" condexec="CHK_DIRECTION">
    <action>
        <strcmp assign_to="compare_result_fc" variable="blf_direction" variable2="CHK_DIRECTION"/>
    </action>
</nop>

<nop hide="true" condexec="compare_result_fc">
    <action>
        <warning message="Wrong direction in blf body. Current direction [$blf_direction]. Require direction [$CHK_DIRECTION]. State [$blf_state]"/>
        <assignstr assign_to="sub_fail" value="true"/>
    </action>
</nop>

<!-- Set first state to trying -->

<nop hide="true" condexec="next_state_fc" condexec_inverse="true">
    <action>
        <assignstr assign_to="next_state_fc" value="trying"/>
    </action>
</nop>

<!-- Comparing current state and next state -->

<nop hide="true" condexec="next_state_fc">
    <action>
        <strcmp assign_to="state_compare_fc" variable="blf_state" variable2="next_state_fc"/>
    </action>
</nop>

<nop hide="true" condexec="state_compare_fc">
    <action>
        <warning message="Recv message with unexpected state: [$blf_state]. Expected state: [$next_state_fc]"/>
        <assignstr assign_to="sub_fail" value="true"/>
    </action>
</nop>

<!-- Handling NOTIFY with state trying -->

<nop hide="true" test="blf_state" test_var_value="trying" next="wait_notify_for_first_call" condexec="blf_state" condexec_var_value="trying">
    <action>
        <warning message="First call changed state to: [$blf_state]" />
        <assignstr assign_to="next_state_fc" value="early"/>
    </action>
</nop>

<!-- Handling notification with state early -->

<nop hide="true" test="blf_state" test_var_value="early" next="send_command_for_fc" condexec="blf_state" condexec_var_value="early">
    <action>
        <warning message="First call changed state to: [$blf_state]" />
        <assignstr assign_to="next_state_fc" value="confirmed"/>
    </action>
</nop>

<!-- Handling notification with state confirmed -->

<nop hide="true" test="blf_state" test_var_value="confirmed" next="wait_notify_for_first_call" condexec="blf_state" condexec_var_value="confirmed">
    <action>
        <warning message="First call changed state to: [$blf_state]" />
        <assignstr assign_to="next_state_fc" value="terminated"/>
    </action>
</nop>

<!-- Handling notification with state terminated -->

<nop hide="true" test="blf_state" test_var_value="terminated" next="wait_notify_for_second_call">
    <action>
        <warning message="First call changed state to: [$blf_state]" />
    </action>
</nop>

<!-- Setting failed flag -->

<nop hide="true" next="unsub">
    <action>
        <assignstr assign_to="sub_fail" value="true"/>
    </action>
</nop>

<!-- Send internal command --> 

<label id="send_command_for_sc"/>

<sendCmd next="wait_notify_for_second_call">
  <![CDATA[
    Call-ID: [$dialog_call_id]
   ]]>
</sendCmd>

<label id="send_command_for_fc"/>

<sendCmd next="wait_notify_for_first_call">
  <![CDATA[
    Call-ID: [$dialog_call_id]
   ]]>
</sendCmd>

<!-- Script exit -->

<label id="exit"/>

<!-- Checking failed flag before exit -->
<pause milliseconds="2000"/>

<nop hide="true" condexec="sub_fail">
    <action>
        <exec int_cmd="stop_now"/>
    </action>
</nop>

</scenario>